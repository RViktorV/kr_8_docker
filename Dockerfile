# Используем официальный образ Python 3.10 на базе минимальной операционной системы
FROM python:3.10-slim

# Устанавливаем рабочую директорию для проекта внутри контейнера
# Все команды после этой строки будут выполняться в папке /app
WORKDIR /app

# Копируем файлы зависимостей (pyproject.toml и poetry.lock) в рабочую директорию контейнера
# Эти файлы содержат список всех зависимостей проекта
COPY pyproject.toml .

# Обновляем pip до последней версии, чтобы избежать проблем с установкой пакетов
RUN pip install --upgrade pip

# Устанавливаем Poetry - инструмент для управления зависимостями проекта
RUN pip install poetry

# Настраиваем Poetry так, чтобы он не создавал виртуальные окружения внутри контейнера
# Виртуальные окружения в контейнере не нужны, так как сам контейнер служит изолированным окружением
RUN poetry config virtualenvs.create false

# Устанавливаем все зависимости, указанные в pyproject.toml, но без установки пакетов для разработки (--no-dev)
# Флаг --no-root отключает установку текущего проекта как зависимости
RUN poetry install --no-root --no-dev

# Копируем весь исходный код проекта из текущей директории на хосте в рабочую директорию контейнера (/app)
COPY . .
